KCPSM6 Assembler log file for program 'E:\KITCODE\sp6_lpddr_v1\pico_ddr_bram_ftdififo\pico_code\PICO_CODE.psm'.
Generated by KCPSM6 version v2.70
Ken Chapman - Xilinx Ltd - 16th May 2014

Assembly datestamp: 21 Jul 2020
Assembly timestamp: 23:25:25

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 098 hex
Nominal program memory size: 1K (1024)   address(9:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 153
Memory locations available: 3943


Assembly listing

 Addr Code                     Instruction

 000                           ;NAMEREG S1,
 000                           ;NAMEREG S2,HH
 000                           ;NAMEREG S3,TOGL_REG
 000                           NAMEREG s0, REG1
 000                           NAMEREG s1, REG2
 000                           NAMEREG s2, DDATA
 000                           NAMEREG s3, REG
 000                           NAMEREG s4, REG4
 000                           NAMEREG s5, TEMP
 000                           NAMEREG s6, DATA
 000                           NAMEREG s7, CNTR1
 000                           NAMEREG s8, CNTR2
 000                           NAMEREG s9, SPI_REG
 000                           NAMEREG sA, ADDR1                   ; LSB ADDRES
 000                           NAMEREG sB, ADDR2
 000                           NAMEREG sC, ADDR3
 000                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000                           ;--------------------------------------------------
 000                           CONSTANT RX_DT_RDY, 02              ;////// INPUT
 000                           CONSTANT RX_DATA, 03                ;////// INPUT
 000                           CONSTANT LED, 01
 000                           CONSTANT TX_DATA, 02
 000                           CONSTANT TX_STB, 03
 000                           CONSTANT RD_PULSE, 04
 000                           ;//USB
 000                           CONSTANT USB_DATA_OUT, 0B           ;;DSOUT     2
 000                           CONSTANT USB_DATA_IN, 02            ;;DSIN      1
 000                           CONSTANT USB_RD_WR, 0A              ;;DSOUT     3
 000                           CONSTANT usb_rxf, 04                ;;DSIN      3
 000                           CONSTANT usb_txe, 03                ;;DSIN      2
 000                           CONSTANT usb_rd, 0C                 ;;DSOUT     1
 000                           CONSTANT usb_wr, 09                 ;;DSOUT     4
 000                           ;// BRAM
 000                           CONSTANT BRAM_DATA_IN, 05           ;;DSIN      1
 000                           CONSTANT BRAM_W, 08                 ;;DSOUT     1
 000                           CONSTANT BRAM_ADR_70, 06            ;;DSOUT     1
 000                           CONSTANT BRAM_ADR_158, 07           ;;DSOUT
 000                           CONSTANT BRAM_DATA_OUT, 05          ;;DSOUT
 000                           ;*************************
 000                           ;; SCRATCHPAD MEMORY
 000                           ;*************************
 000                           CONSTANT UR_DATA_RAM, 01
 000                           CONSTANT DDR_BRAM, 02
 000                           CONSTANT CMD_WR_RD, 03
 000                           CONSTANT ST_ADD_1, 04
 000                           CONSTANT ST_ADD_2, 05
 000                           CONSTANT N_OF_BYTE1, 06
 000                           CONSTANT N_OF_BYTE2, 07
 000                           CONSTANT BT_CNT1, 08
 000                           CONSTANT BT_CNT2, 09
 000                           CONSTANT BUFF_AD1, 0A
 000                           CONSTANT BUFF_AD2, 0B
 000                           ;CONSTANT UR_DATA_RAM,01
 000                           ;CONSTANT UR_DATA_RAM,01
 000                           ;CONSTANT UR_DATA_RAM,01
 000                           CONSTANT DELL1, 36
 000                           CONSTANT DELL2, 37
 000                           CONSTANT DELL3, 38
 000                           CONSTANT DELL4, 39
 000                           CONSTANT DELL5, 3A
 000                           CONSTANT DELL6, 3B
 000                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000                           CONSTANT RDID_9F, 9F
 000                           CONSTANT WREN_06, 06
 000                           CONSTANT PP_02, 02
 000                           CONSTANT READ_03, 03
 000                           CONSTANT RDSR_05, 05
 000                           CONSTANT SE_D8, D8
 000                           CONSTANT WRSR_01, 01
 000                           CONSTANT BE_C7, C7
 000                           CONSTANT DELAY_1US_CONSTANT, 0B     ;CONSTANT VALUE FOR DELAY RUTNS
 000              CHECK_FRAME: ;$ D/B 12 34 R/W #** DATA
 000  20069                    CALL 069[take_data_in_usb]
 001  1D224                    COMPARE s2[DDATA], 24["$"]
 002  36000                    JUMP NZ, 000[CHECK_FRAME]
 003  20069                    CALL 069[take_data_in_usb]
 004  2F202                    STORE s2[DDATA], 02[DDR_BRAM]
 005  20069                    CALL 069[take_data_in_usb]          ;START ADDR1
 006  2F205                    STORE s2[DDATA], 05[ST_ADD_2]
 007  20069                    CALL 069[take_data_in_usb]          ;START ADDR2
 008  2F204                    STORE s2[DDATA], 04[ST_ADD_1]
 009  20069                    CALL 069[take_data_in_usb]          ;NO OF BYTES1
 00A  2F207                    STORE s2[DDATA], 07[N_OF_BYTE2]
 00B  20069                    CALL 069[take_data_in_usb]          ;;NO OF BYTES2;;;;;7 TO 0
 00C  2F206                    STORE s2[DDATA], 06[N_OF_BYTE1]
 00D  20069                    CALL 069[take_data_in_usb]
 00E  2F203                    STORE s2[DDATA], 03[CMD_WR_RD]
 00F  20069                    CALL 069[take_data_in_usb]
 010  1D223                    COMPARE s2[DDATA], 23["#"]
 011  36000                    JUMP NZ, 000[CHECK_FRAME]
 012                    START: 
 012                           ;
 012  0B203                    FETCH s2[DDATA], 03[CMD_WR_RD]
 013  1D252                    COMPARE s2[DDATA], 52["R"]
 014  30030                    CALL Z, 030[RD_DDR_RAM]
 015  1D257                    COMPARE s2[DDATA], 57["W"]
 016  3001A                    CALL Z, 01A[WR_DDR_RAM]
 017  22000                    JUMP 000[CHECK_FRAME]
 018                           ;
 018                           ;CALL  WR_DDR_RAM
 018                           ;CALL RD_DDR_RAM
 018  22000                    JUMP 000[CHECK_FRAME]
 019  22019              HJGF: JUMP 019[HJGF]
 01A               WR_DDR_RAM: 
 01A                           ;CALL LED_BLINK
 01A                           ;LOAD DDATA, "W"
 01A                           ;CALL send_one_bt_usb
 01A                           ;call take_data_in_usb
 01A                           ;COMPARE DDATA,"*"
 01A                           ;JUMP NZ, CHECK_FRAME
 01A                           ;call take_data_in_usb
 01A                           ;COMPARE DDATA,"*"
 01A                           ;JUMP NZ, CHECK_FRAME
 01A  0B004                    FETCH s0[REG1], 04[ST_ADD_1]
 01B  2F00A                    STORE s0[REG1], 0A[BUFF_AD1]
 01C  0B005                    FETCH s0[REG1], 05[ST_ADD_2]
 01D  2F00B                    STORE s0[REG1], 0B[BUFF_AD2]
 01E  01000                    LOAD s0[REG1], 00
 01F  2F008                    STORE s0[REG1], 08[BT_CNT1]
 020  2F009                    STORE s0[REG1], 09[BT_CNT2]
 021             TAKE_NXT_BYT: 
 021  20069                    CALL 069[take_data_in_usb]
 022  20047                    CALL 047[WR_BRAM_DATA]
 023  0B708                    FETCH s7[CNTR1], 08[BT_CNT1]
 024  0B809                    FETCH s8[CNTR2], 09[BT_CNT2]
 025  11701                    ADD s7[CNTR1], 01
 026  13800                    ADDCY s8[CNTR2], 00
 027  2F708                    STORE s7[CNTR1], 08[BT_CNT1]
 028  2F809                    STORE s8[CNTR2], 09[BT_CNT2]
 029  0BA06                    FETCH sA[ADDR1], 06[N_OF_BYTE1]
 02A  0BB07                    FETCH sB[ADDR2], 07[N_OF_BYTE2]
 02B  1CA70                    COMPARE sA[ADDR1], s7[CNTR1]
 02C  36021                    JUMP NZ, 021[TAKE_NXT_BYT]
 02D  1CB80                    COMPARE sB[ADDR2], s8[CNTR2]
 02E  36021                    JUMP NZ, 021[TAKE_NXT_BYT]
 02F  25000                    RETURN 
 030               RD_DDR_RAM: 
 030  01000                    LOAD s0[REG1], 00
 031  2F008                    STORE s0[REG1], 08[BT_CNT1]
 032  2F009                    STORE s0[REG1], 09[BT_CNT2]
 033  0B004                    FETCH s0[REG1], 04[ST_ADD_1]
 034  2F00A                    STORE s0[REG1], 0A[BUFF_AD1]
 035  0B005                    FETCH s0[REG1], 05[ST_ADD_2]
 036  2F00B                    STORE s0[REG1], 0B[BUFF_AD2]
 037             SEND_NXT_BYT: 
 037  2004A                    CALL 04A[INC_BRAM_ADDRESS]
 038  09205                    INPUT s2[DDATA], 05[BRAM_DATA_IN]
 039  2005A                    CALL 05A[send_one_bt_usb]
 03A  0B708                    FETCH s7[CNTR1], 08[BT_CNT1]
 03B  0B809                    FETCH s8[CNTR2], 09[BT_CNT2]
 03C  11701                    ADD s7[CNTR1], 01
 03D  13800                    ADDCY s8[CNTR2], 00
 03E  2F708                    STORE s7[CNTR1], 08[BT_CNT1]
 03F  2F809                    STORE s8[CNTR2], 09[BT_CNT2]
 040  0BA06                    FETCH sA[ADDR1], 06[N_OF_BYTE1]
 041  0BB07                    FETCH sB[ADDR2], 07[N_OF_BYTE2]
 042  1CA70                    COMPARE sA[ADDR1], s7[CNTR1]
 043  36037                    JUMP NZ, 037[SEND_NXT_BYT]
 044  1CB80                    COMPARE sB[ADDR2], s8[CNTR2]
 045  36037                    JUMP NZ, 037[SEND_NXT_BYT]
 046  25000                    RETURN 
 047             WR_BRAM_DATA: 
 047  2D205                    OUTPUT s2[DDATA], 05[BRAM_DATA_OUT]
 048  2004A                    CALL 04A[INC_BRAM_ADDRESS]
 049  25000                    RETURN 
 04A  0BA0A  INC_BRAM_ADDRESS: FETCH sA[ADDR1], 0A[BUFF_AD1]
 04B  0BB0B                    FETCH sB[ADDR2], 0B[BUFF_AD2]
 04C  11A01                    ADD sA[ADDR1], 01
 04D  13B00                    ADDCY sB[ADDR2], 00
 04E  2DA06                    OUTPUT sA[ADDR1], 06[BRAM_ADR_70]
 04F  2DB07                    OUTPUT sB[ADDR2], 07[BRAM_ADR_158]
 050  2FA0A                    STORE sA[ADDR1], 0A[BUFF_AD1]
 051  2FB0B                    STORE sB[ADDR2], 0B[BUFF_AD2]
 052  25000                    RETURN 
 053           CHK_DT_PRESENT: 
 053  09002                    INPUT s0[REG1], 02[RX_DT_RDY]
 054  1D001                    COMPARE s0[REG1], 01[00000001'b]
 055  36053                    JUMP NZ, 053[CHK_DT_PRESENT]
 056  2D004                    OUTPUT s0[REG1], 04[RD_PULSE]
 057  09003                    INPUT s0[REG1], 03[RX_DATA]
 058  2D001                    OUTPUT s0[REG1], 01[LED]
 059  25000                    RETURN 
 05A          send_one_bt_usb: 
 05A               wr_rdy_chk: 
 05A  09003                    INPUT s0[REG1], 03[usb_txe]
 05B  0D001                    TEST s0[REG1], 01[00000001'b]
 05C  3605A                    JUMP NZ, 05A[wr_rdy_chk]
 05D  01000                    LOAD s0[REG1], 00
 05E  2D00A                    OUTPUT s0[REG1], 0A[USB_RD_WR]
 05F  2D20B                    OUTPUT s2[DDATA], 0B[USB_DATA_OUT]
 060  01000                    LOAD s0[REG1], 00
 061  2D009                    OUTPUT s0[REG1], 09[usb_wr]
 062  010FF                    LOAD s0[REG1], FF
 063  2D009                    OUTPUT s0[REG1], 09[usb_wr]
 064  20083                    CALL 083[DELAY_107US]
 065  20083                    CALL 083[DELAY_107US]
 066  010FF                    LOAD s0[REG1], FF
 067  2D00A                    OUTPUT s0[REG1], 0A[USB_RD_WR]
 068  25000                    RETURN 
 069         take_data_in_usb: 
 069  09004                    INPUT s0[REG1], 04[usb_rxf]
 06A  0D001                    TEST s0[REG1], 01[00000001'b]
 06B  36069                    JUMP NZ, 069[take_data_in_usb]
 06C  010FF                    LOAD s0[REG1], FF
 06D  2D00A                    OUTPUT s0[REG1], 0A[USB_RD_WR]
 06E  2D00C                    OUTPUT s0[REG1], 0C[usb_rd]
 06F  09202                    INPUT s2[DDATA], 02[USB_DATA_IN]
 070  25000                    RETURN 
 071                LED_BLINK: 
 071  19001               LP1: SUB s0[REG1], 01
 072  016AA                    LOAD s6[DATA], AA
 073  2D601                    OUTPUT s6[DATA], 01[LED]
 074  2008B                    CALL 08B[DELAY_20MS]
 075  2008B                    CALL 08B[DELAY_20MS]
 076  01655                    LOAD s6[DATA], 55
 077  2D601                    OUTPUT s6[DATA], 01[LED]
 078  2008B                    CALL 08B[DELAY_20MS]
 079  2008B                    CALL 08B[DELAY_20MS]
 07A  2008B                    CALL 08B[DELAY_20MS]
 07B  2008B                    CALL 08B[DELAY_20MS]
 07C  1D000                    COMPARE s0[REG1], 00
 07D  36071                    JUMP NZ, 071[LP1]
 07E  25000                    RETURN 
 07F                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ALL DELAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 07F                           ;--
 07F                           ;|1000000/416NS
 07F                           ;|--------------------------===== CNT
 07F                           ;|10
 07F                           ;|--------
 07F                           ; 10US IS 1000     (1000000/416 = 000018 HEX)   FOR 24MHZ
 07F               DELAY_10US: 
 07F  01F00                    LOAD sF, 00
 080  01E00                    LOAD sE, 00
 081  01D18                    LOAD sD, 18
 082  22093                    JUMP 093[SOFTWARE_DELAY]
 083                           ; 10US IS 1000     (1000000/416 = 000101 HEX)   FOR 24MHZ
 083              DELAY_107US: 
 083  01F00                    LOAD sF, 00
 084  01E01                    LOAD sE, 01
 085  01D01                    LOAD sD, 01
 086  22093                    JUMP 093[SOFTWARE_DELAY]
 087                           ; 1MS IS 1000     (1000/416 = 000963 HEX)   FOR 24MHZ
 087                DELAY_1MS: 
 087  01F00                    LOAD sF, 00
 088  01E09                    LOAD sE, 09
 089  01D63                    LOAD sD, 63
 08A  22093                    JUMP 093[SOFTWARE_DELAY]
 08B                           ;
 08B                           ; 20MS IS 20,000  100NS  (20,000/416 = 00BBCD HEX)  FOR 24MHZ
 08B  01F00        DELAY_20MS: LOAD sF, 00
 08C  01E5D                    LOAD sE, 5D
 08D  01DC9                    LOAD sD, C9
 08E  22093                    JUMP 093[SOFTWARE_DELAY]
 08F                           ;
 08F                           ;
 08F                           ; 1S IS 10,000,00 X 10NS      (1/416 = 24AE06 HEX)  FOR 24MHZ
 08F  01F24          DELAY_1S: LOAD sF, 24
 090  01EAE                    LOAD sE, AE
 091  01D06                    LOAD sD, 06
 092  22093                    JUMP 093[SOFTWARE_DELAY]
 093                           ;
 093                           ; THE DELAY LOOP DECREMENTS [S2,S1,S0] UNTIL IT REACHES ZERO
 093                           ; EACH DECREMENT CYCLE IS 5 INSTRUCTIONS WHICH IS 10 CLOCK CYCLES (416NS AT 24MHZ)
 093  00DD0    SOFTWARE_DELAY: LOAD sD, sD                         ;PAD LOOP TO MAKE IT 10 CLOCK CYCLES (5 INSTRUCTIONS)
 094  19D01                    SUB sD, 01[1'd]
 095  1BE00                    SUBCY sE, 00[0'd]
 096  1BF00                    SUBCY sF, 00[0'd]
 097  36093                    JUMP NZ, 093[SOFTWARE_DELAY]
 098  25000                    RETURN 
 099                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


All unused memory locations contain zero (equivalent to 'LOAD s0, s0')



List of PSM files that have been assembled

E:\KITCODE\sp6_lpddr_v1\pico_ddr_bram_ftdififo\pico_code\PICO_CODE.psm



List of defined constants

 CONSTANT name      Value        Source PSM File

 timestamp_hours    23'd         
 timestamp_minutes  25'd         
 timestamp_seconds  25'd         
 datestamp_year     20'd         
 datestamp_month    7'd          
 datestamp_day      21'd         
 NUL                00           
 BEL                07           
 BS                 08           
 HT                 09           
 LF                 0A           
 VT                 0B           
 CR                 0D           
 ESC                1B           
 DEL                7F           
 DCS                90           
 ST                 9C           
 RX_DT_RDY          02           PICO_CODE.psm
 RX_DATA            03           PICO_CODE.psm
 LED                01           PICO_CODE.psm
 TX_DATA            02           PICO_CODE.psm
 TX_STB             03           PICO_CODE.psm
 RD_PULSE           04           PICO_CODE.psm
 USB_DATA_OUT       0B           PICO_CODE.psm
 USB_DATA_IN        02           PICO_CODE.psm
 USB_RD_WR          0A           PICO_CODE.psm
 usb_rxf            04           PICO_CODE.psm
 usb_txe            03           PICO_CODE.psm
 usb_rd             0C           PICO_CODE.psm
 usb_wr             09           PICO_CODE.psm
 BRAM_DATA_IN       05           PICO_CODE.psm
 BRAM_W             08           PICO_CODE.psm
 BRAM_ADR_70        06           PICO_CODE.psm
 BRAM_ADR_158       07           PICO_CODE.psm
 BRAM_DATA_OUT      05           PICO_CODE.psm
 UR_DATA_RAM        01           PICO_CODE.psm
 DDR_BRAM           02           PICO_CODE.psm
 CMD_WR_RD          03           PICO_CODE.psm
 ST_ADD_1           04           PICO_CODE.psm
 ST_ADD_2           05           PICO_CODE.psm
 N_OF_BYTE1         06           PICO_CODE.psm
 N_OF_BYTE2         07           PICO_CODE.psm
 BT_CNT1            08           PICO_CODE.psm
 BT_CNT2            09           PICO_CODE.psm
 BUFF_AD1           0A           PICO_CODE.psm
 BUFF_AD2           0B           PICO_CODE.psm
 DELL1              36           PICO_CODE.psm
 DELL2              37           PICO_CODE.psm
 DELL3              38           PICO_CODE.psm
 DELL4              39           PICO_CODE.psm
 DELL5              3A           PICO_CODE.psm
 DELL6              3B           PICO_CODE.psm
 RDID_9F            9F           PICO_CODE.psm
 WREN_06            06           PICO_CODE.psm
 PP_02              02           PICO_CODE.psm
 READ_03            03           PICO_CODE.psm
 RDSR_05            05           PICO_CODE.psm
 SE_D8              D8           PICO_CODE.psm
 WRSR_01            01           PICO_CODE.psm
 BE_C7              C7           PICO_CODE.psm
 DELAY_1US_CONSTANT 0B           PICO_CODE.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.70"        
 datestamp$        "21 Jul 2020"  
 timestamp$        "23:25:25"     



List of line labels

   Label              Addr  Source PSM File

   CHECK_FRAME        000   PICO_CODE.psm
 * START              012   PICO_CODE.psm
   HJGF               019   PICO_CODE.psm
   WR_DDR_RAM         01A   PICO_CODE.psm
   TAKE_NXT_BYT       021   PICO_CODE.psm
   RD_DDR_RAM         030   PICO_CODE.psm
   SEND_NXT_BYT       037   PICO_CODE.psm
   WR_BRAM_DATA       047   PICO_CODE.psm
   INC_BRAM_ADDRESS   04A   PICO_CODE.psm
   CHK_DT_PRESENT     053   PICO_CODE.psm
   send_one_bt_usb    05A   PICO_CODE.psm
   wr_rdy_chk         05A   PICO_CODE.psm
   take_data_in_usb   069   PICO_CODE.psm
 * LED_BLINK          071   PICO_CODE.psm
   LP1                071   PICO_CODE.psm
 * DELAY_10US         07F   PICO_CODE.psm
   DELAY_107US        083   PICO_CODE.psm
 * DELAY_1MS          087   PICO_CODE.psm
   DELAY_20MS         08B   PICO_CODE.psm
 * DELAY_1S           08F   PICO_CODE.psm
   SOFTWARE_DELAY     093   PICO_CODE.psm

      * Line label has not been referenced in any instructions.
        Hint - This may indicate unused code that could be
               removed to reduce the size of this program.



Instruction usage statistics

 Instruction    Instances

 LOAD             25
 STAR              -

 AND               -
 OR                -
 XOR               -

 ADD               3
 ADDCY             3
 SUB               2
 SUBCY             2

 TEST              2
 TESTCY            -
 COMPARE          10
 COMPARECY         -

 SL0               -
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           -

 INPUT             6
 OUTPUT           14
 OUTPUTK           -

 STORE            15
 FETCH            15

 DISABLE           -
 ENABLE            -
 RETURNI           -

 JUMP             19
 JUMP@             -
 CALL             23
 CALL@             -
 RETURN            9
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
