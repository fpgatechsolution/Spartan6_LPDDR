KCPSM6 Assembler log file for program 'E:\KITCODE\sp6_lpddr_v1\pico_ddr_bram_ftdififo\pico_code\PICO_CODE.psm'.
Generated by KCPSM6 version v2.70
Ken Chapman - Xilinx Ltd - 16th May 2014

Assembly datestamp: 29 Jul 2020
Assembly timestamp: 00:45:17

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 0F8 hex
Nominal program memory size: 1K (1024)   address(9:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 249
Memory locations available: 3847


Assembly listing

 Addr Code                     Instruction

 000                           ;NAMEREG S1,
 000                           ;NAMEREG S2,HH
 000                           ;NAMEREG S3,TOGL_REG
 000                           NAMEREG s0, REG1
 000                           NAMEREG s1, REG2
 000                           NAMEREG s2, DDATA
 000                           NAMEREG s3, REG
 000                           NAMEREG s4, REG4
 000                           NAMEREG s5, TEMP
 000                           NAMEREG s6, DATA
 000                           NAMEREG s7, CNTR1
 000                           NAMEREG s8, CNTR2
 000                           NAMEREG s9, SPI_REG
 000                           NAMEREG sA, ADDR1                         ; LSB ADDRES
 000                           NAMEREG sB, ADDR2
 000                           NAMEREG sC, ADDR3
 000                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000                           ;--------------------------------------------------
 000                           CONSTANT RX_DT_RDY, 02                    ;////// INPUT
 000                           CONSTANT RX_DATA, 03                      ;////// INPUT
 000                           CONSTANT LED, 01
 000                           CONSTANT TX_DATA, 02
 000                           CONSTANT TX_STB, 03
 000                           CONSTANT RD_PULSE, 04
 000                           ;//USB
 000                           CONSTANT USB_DATA_OUT, 0B                 ;;DSOUT     2
 000                           CONSTANT USB_DATA_IN, 02                  ;;DSIN      1
 000                           CONSTANT USB_RD_WR, 0A                    ;;DSOUT     3
 000                           CONSTANT usb_rxf, 04                      ;;DSIN      3
 000                           CONSTANT usb_txe, 03                      ;;DSIN      2
 000                           CONSTANT usb_rd, 0C                       ;;DSOUT     1
 000                           CONSTANT usb_wr, 09                       ;;DSOUT     4
 000                           ;// BRAM
 000                           CONSTANT BRAM_DATA_IN, 05                 ;;DSIN      1
 000                           CONSTANT BRAM_W, 08                       ;;DSOUT     1
 000                           CONSTANT BRAM_ADR_70, 06                  ;;DSOUT     1
 000                           CONSTANT BRAM_ADR_158, 07                 ;;DSOUT
 000                           CONSTANT BRAM_DATA_OUT, 05                ;;DSOUT
 000                           ;//////////ddr write
 000                           CONSTANT DDR_DATA_W_31_24, 13'd           ;;DSOUT
 000                           CONSTANT DDR_DATA_W_23_16, 14'd           ;;DSOUT
 000                           CONSTANT DDR_DATA_W_15_8, 15'd            ;;DSOUT
 000                           CONSTANT DDR_DATA_W_7_0, 16'd             ;;DSOUT
 000                           CONSTANT CMD_WR_PLS, 17'd                 ;;DSOUT
 000                           CONSTANT WR_EN_PLS, 18'd                  ;;DSOUT
 000                           CONSTANT WR_RD_CMD, 19'd                  ;;DSOUT  ;;;0 for write 1 for read
 000                           ;//////////ddr_read
 000                           CONSTANT DDR_DATA_R_31_24, 06'd           ;;DSIN
 000                           CONSTANT DDR_DATA_R_23_16, 07'd           ;;DSIN
 000                           CONSTANT DDR_DATA_R_15_8, 08'd            ;;DSIN
 000                           CONSTANT DDR_DATA_R_7_0, 09'd             ;;DSIN
 000                           CONSTANT READ_EMPTY, 12'd                 ;;DSIN
 000                           CONSTANT DDR_ADDRESS_INC_PLS, 21'd        ;;DSOUT
 000                           CONSTANT RD_EN_PLS, 22'd                  ;;DSOUT
 000                           CONSTANT DDR_ADDRESS_RESET_W, 23'd        ;;DSOUT
 000                           CONSTANT DDR_ADDRESS_RESET_R, 23'd        ;;DSOUT
 000                           ;*************************
 000                           ;; SCRATCHPAD MEMORY
 000                           ;*************************
 000                           ;;;;;;Register interface
 000                           CONSTANT USER_REGADDR_15_8, 25'd          ;;DSOUT
 000                           CONSTANT USER_REGADDR_7_0, 26'd           ;;DSOUT
 000                           CONSTANT USER_REGDATAOUT, 27'd            ;;DSOUT
 000                           CONSTANT USER_REGWE, 8'd                  ;;DSOUT
 000                           CONSTANT USER_REGRE, 20'd                 ;;DSOUT
 000                           CONSTANT USER_REGDATAIN, 13'd             ;;DSIN
 000                           CONSTANT UR_DATA_RAM, 01
 000                           CONSTANT DDR_BRAM, 02
 000                           CONSTANT CMD_WR_RD, 03
 000                           CONSTANT ST_ADD_1, 04
 000                           CONSTANT ST_ADD_2, 05
 000                           CONSTANT N_OF_BYTE1, 06
 000                           CONSTANT N_OF_BYTE2, 07
 000                           CONSTANT BT_CNT1, 08
 000                           CONSTANT BT_CNT2, 09
 000                           CONSTANT BUFF_AD1, 0A
 000                           CONSTANT BUFF_AD2, 0B
 000                           ;CONSTANT UR_DATA_RAM,01
 000                           ;CONSTANT UR_DATA_RAM,01
 000                           ;CONSTANT UR_DATA_RAM,01
 000                           CONSTANT DELL1, 36
 000                           CONSTANT DELL2, 37
 000                           CONSTANT DELL3, 38
 000                           CONSTANT DELL4, 39
 000                           CONSTANT DELL5, 3A
 000                           CONSTANT DELL6, 3B
 000                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000                           CONSTANT RDID_9F, 9F
 000                           CONSTANT WREN_06, 06
 000                           CONSTANT PP_02, 02
 000                           CONSTANT READ_03, 03
 000                           CONSTANT RDSR_05, 05
 000                           CONSTANT SE_D8, D8
 000                           CONSTANT WRSR_01, 01
 000                           CONSTANT BE_C7, C7
 000                           CONSTANT DELAY_1US_CONSTANT, 0B           ;CONSTANT VALUE FOR DELAY RUTNS
 000  20072                    CALL 072[send_one_bt_usb]
 001                           ;test_ddr: call take_data_in_usb
 001                           ;   COMPARE DDATA,"$"
 001                           ;   JUMP NZ, test_ddr
 001                           ;
 001                           ;
 001                           ; OUTPUT DDATA,DDR_ADDRESS_RESET_W
 001                           ;
 001                           ;
 001                           ;
 001                           ; CALL WRITE_1_WORD_DDR
 001                           ;
 001                           ;
 001                           ;
 001                           ; CALL DELAY_10US
 001                           ; OUTPUT DDATA,DDR_ADDRESS_RESET_R
 001                           ;
 001                           ;
 001                           ; CALL READ_1_WORD_DDR
 001                           ;
 001                           ;
 001                           ;
 001                           ;
 001                           ;
 001                           ; CALL DELAY_10US
 001                           ; CALL DELAY_20MS
 001                           ;
 001                           ;
 001                           ;
 001                           ;call test_ddr
 001                           ;
 001                           ;
 001                           ;
 001                           ; ASD: JUMP ASD
 001                           ;
 001                           ;$ G 12 04 R/W # DATA
 001              CHECK_FRAME: ;$ D/B 12 34 R/W #** DATA
 001  20081                    CALL 081[take_data_in_usb]
 002  1D224                    COMPARE s2[DDATA], 24["$"]
 003  36001                    JUMP NZ, 001[CHECK_FRAME]
 004  20081                    CALL 081[take_data_in_usb]
 005  2F202                    STORE s2[DDATA], 02[DDR_BRAM]
 006  20081                    CALL 081[take_data_in_usb]                ;START ADDR1
 007  2F205                    STORE s2[DDATA], 05[ST_ADD_2]
 008  20081                    CALL 081[take_data_in_usb]                ;START ADDR2
 009  2F204                    STORE s2[DDATA], 04[ST_ADD_1]
 00A  20081                    CALL 081[take_data_in_usb]                ;NO OF BYTES1
 00B  2F207                    STORE s2[DDATA], 07[N_OF_BYTE2]
 00C  20081                    CALL 081[take_data_in_usb]                ;;NO OF BYTES2;;;;;7 TO 0
 00D  2F206                    STORE s2[DDATA], 06[N_OF_BYTE1]
 00E  20081                    CALL 081[take_data_in_usb]
 00F  2F203                    STORE s2[DDATA], 03[CMD_WR_RD]
 010  20081                    CALL 081[take_data_in_usb]
 011  1D223                    COMPARE s2[DDATA], 23["#"]
 012  36001                    JUMP NZ, 001[CHECK_FRAME]
 013                    START: 
 013  0B202                    FETCH s2[DDATA], 02[DDR_BRAM]
 014  1D247                    COMPARE s2[DDATA], 47["G"]
 015  320BF                    JUMP Z, 0BF[REG_CONTROL]
 016  0B203                    FETCH s2[DDATA], 03[CMD_WR_RD]
 017  1D252                    COMPARE s2[DDATA], 52["R"]
 018  3003E                    CALL Z, 03E[RD_DDR_RAM]
 019  1D257                    COMPARE s2[DDATA], 57["W"]
 01A  3001E                    CALL Z, 01E[WR_DDR_RAM]
 01B  22001                    JUMP 001[CHECK_FRAME]
 01C                           ;
 01C  22001                    JUMP 001[CHECK_FRAME]
 01D  2201D              HJGF: JUMP 01D[HJGF]
 01E               WR_DDR_RAM: 
 01E  2D017                    OUTPUT s0[REG1], 17[DDR_ADDRESS_RESET_W]
 01F  0B004                    FETCH s0[REG1], 04[ST_ADD_1]
 020  2F00A                    STORE s0[REG1], 0A[BUFF_AD1]
 021  0B005                    FETCH s0[REG1], 05[ST_ADD_2]
 022  2F00B                    STORE s0[REG1], 0B[BUFF_AD2]
 023  01000                    LOAD s0[REG1], 00
 024  2F008                    STORE s0[REG1], 08[BT_CNT1]
 025  2F009                    STORE s0[REG1], 09[BT_CNT2]
 026             TAKE_NXT_BYT: 
 026  0B202                    FETCH s2[DDATA], 02[DDR_BRAM]
 027  1D244                    COMPARE s2[DDATA], 44["D"]
 028  3202D                    JUMP Z, 02D[WR_DDR]
 029  0B202                    FETCH s2[DDATA], 02[DDR_BRAM]
 02A  1D242                    COMPARE s2[DDATA], 42["B"]
 02B  3202F                    JUMP Z, 02F[WR_BRAM]
 02C  25000                    RETURN 
 02D                   WR_DDR: 
 02D  200A1                    CALL 0A1[WRITE_1_WORD_DDR]
 02E  22031                    JUMP 031[NXT_LOOP]
 02F                  WR_BRAM: 
 02F  20081                    CALL 081[take_data_in_usb]
 030  2005F                    CALL 05F[WR_BRAM_DATA]
 031                 NXT_LOOP: 
 031  0B708                    FETCH s7[CNTR1], 08[BT_CNT1]
 032  0B809                    FETCH s8[CNTR2], 09[BT_CNT2]
 033  11701                    ADD s7[CNTR1], 01
 034  13800                    ADDCY s8[CNTR2], 00
 035  2F708                    STORE s7[CNTR1], 08[BT_CNT1]
 036  2F809                    STORE s8[CNTR2], 09[BT_CNT2]
 037  0BA06                    FETCH sA[ADDR1], 06[N_OF_BYTE1]
 038  0BB07                    FETCH sB[ADDR2], 07[N_OF_BYTE2]
 039  1CA70                    COMPARE sA[ADDR1], s7[CNTR1]
 03A  36026                    JUMP NZ, 026[TAKE_NXT_BYT]
 03B  1CB80                    COMPARE sB[ADDR2], s8[CNTR2]
 03C  36026                    JUMP NZ, 026[TAKE_NXT_BYT]
 03D  25000                    RETURN 
 03E               RD_DDR_RAM: 
 03E  2D017                    OUTPUT s0[REG1], 17[DDR_ADDRESS_RESET_R]
 03F  01000                    LOAD s0[REG1], 00
 040  2F008                    STORE s0[REG1], 08[BT_CNT1]
 041  2F009                    STORE s0[REG1], 09[BT_CNT2]
 042  0B004                    FETCH s0[REG1], 04[ST_ADD_1]
 043  2F00A                    STORE s0[REG1], 0A[BUFF_AD1]
 044  0B005                    FETCH s0[REG1], 05[ST_ADD_2]
 045  2F00B                    STORE s0[REG1], 0B[BUFF_AD2]
 046             SEND_NXT_BYT: 
 046  0B202                    FETCH s2[DDATA], 02[DDR_BRAM]
 047  1D244                    COMPARE s2[DDATA], 44["D"]
 048  3204D                    JUMP Z, 04D[RD_DDR]
 049  0B202                    FETCH s2[DDATA], 02[DDR_BRAM]
 04A  1D242                    COMPARE s2[DDATA], 42["B"]
 04B  3204F                    JUMP Z, 04F[RD_BRAM]
 04C  25000                    RETURN 
 04D                   RD_DDR: 
 04D  200A8                    CALL 0A8[READ_1_WORD_DDR]
 04E  22052                    JUMP 052[NXT_LOOP1]
 04F                  RD_BRAM: 
 04F  20062                    CALL 062[INC_BRAM_ADDRESS]
 050  09205                    INPUT s2[DDATA], 05[BRAM_DATA_IN]
 051  20072                    CALL 072[send_one_bt_usb]
 052                NXT_LOOP1: 
 052  0B708                    FETCH s7[CNTR1], 08[BT_CNT1]
 053  0B809                    FETCH s8[CNTR2], 09[BT_CNT2]
 054  11701                    ADD s7[CNTR1], 01
 055  13800                    ADDCY s8[CNTR2], 00
 056  2F708                    STORE s7[CNTR1], 08[BT_CNT1]
 057  2F809                    STORE s8[CNTR2], 09[BT_CNT2]
 058  0BA06                    FETCH sA[ADDR1], 06[N_OF_BYTE1]
 059  0BB07                    FETCH sB[ADDR2], 07[N_OF_BYTE2]
 05A  1CA70                    COMPARE sA[ADDR1], s7[CNTR1]
 05B  36046                    JUMP NZ, 046[SEND_NXT_BYT]
 05C  1CB80                    COMPARE sB[ADDR2], s8[CNTR2]
 05D  36046                    JUMP NZ, 046[SEND_NXT_BYT]
 05E  25000                    RETURN 
 05F             WR_BRAM_DATA: 
 05F  2D205                    OUTPUT s2[DDATA], 05[BRAM_DATA_OUT]
 060  20062                    CALL 062[INC_BRAM_ADDRESS]
 061  25000                    RETURN 
 062  0BA0A  INC_BRAM_ADDRESS: FETCH sA[ADDR1], 0A[BUFF_AD1]
 063  0BB0B                    FETCH sB[ADDR2], 0B[BUFF_AD2]
 064  11A01                    ADD sA[ADDR1], 01
 065  13B00                    ADDCY sB[ADDR2], 00
 066  2DA06                    OUTPUT sA[ADDR1], 06[BRAM_ADR_70]
 067  2DB07                    OUTPUT sB[ADDR2], 07[BRAM_ADR_158]
 068  2FA0A                    STORE sA[ADDR1], 0A[BUFF_AD1]
 069  2FB0B                    STORE sB[ADDR2], 0B[BUFF_AD2]
 06A  25000                    RETURN 
 06B           CHK_DT_PRESENT: 
 06B  09002                    INPUT s0[REG1], 02[RX_DT_RDY]
 06C  1D001                    COMPARE s0[REG1], 01[00000001'b]
 06D  3606B                    JUMP NZ, 06B[CHK_DT_PRESENT]
 06E  2D004                    OUTPUT s0[REG1], 04[RD_PULSE]
 06F  09003                    INPUT s0[REG1], 03[RX_DATA]
 070  2D001                    OUTPUT s0[REG1], 01[LED]
 071  25000                    RETURN 
 072          send_one_bt_usb: 
 072               wr_rdy_chk: 
 072  09003                    INPUT s0[REG1], 03[usb_txe]
 073  0D001                    TEST s0[REG1], 01[00000001'b]
 074  36072                    JUMP NZ, 072[wr_rdy_chk]
 075  01000                    LOAD s0[REG1], 00
 076  2D00A                    OUTPUT s0[REG1], 0A[USB_RD_WR]
 077  2D20B                    OUTPUT s2[DDATA], 0B[USB_DATA_OUT]
 078  01000                    LOAD s0[REG1], 00
 079  2D009                    OUTPUT s0[REG1], 09[usb_wr]
 07A  010FF                    LOAD s0[REG1], FF
 07B  2D009                    OUTPUT s0[REG1], 09[usb_wr]
 07C  200E3                    CALL 0E3[DELAY_107US]
 07D  200E3                    CALL 0E3[DELAY_107US]
 07E  010FF                    LOAD s0[REG1], FF
 07F  2D00A                    OUTPUT s0[REG1], 0A[USB_RD_WR]
 080  25000                    RETURN 
 081         take_data_in_usb: 
 081  09004                    INPUT s0[REG1], 04[usb_rxf]
 082  0D001                    TEST s0[REG1], 01[00000001'b]
 083  36081                    JUMP NZ, 081[take_data_in_usb]
 084  010FF                    LOAD s0[REG1], FF
 085  2D00A                    OUTPUT s0[REG1], 0A[USB_RD_WR]
 086  2D00C                    OUTPUT s0[REG1], 0C[usb_rd]
 087  09202                    INPUT s2[DDATA], 02[USB_DATA_IN]
 088  25000                    RETURN 
 089                LED_BLINK: 
 089  19001               LP1: SUB s0[REG1], 01
 08A  016AA                    LOAD s6[DATA], AA
 08B  2D601                    OUTPUT s6[DATA], 01[LED]
 08C  200EB                    CALL 0EB[DELAY_20MS]
 08D  200EB                    CALL 0EB[DELAY_20MS]
 08E  01655                    LOAD s6[DATA], 55
 08F  2D601                    OUTPUT s6[DATA], 01[LED]
 090  200EB                    CALL 0EB[DELAY_20MS]
 091  200EB                    CALL 0EB[DELAY_20MS]
 092  200EB                    CALL 0EB[DELAY_20MS]
 093  200EB                    CALL 0EB[DELAY_20MS]
 094  1D000                    COMPARE s0[REG1], 00
 095  36089                    JUMP NZ, 089[LP1]
 096  25000                    RETURN 
 097             DATA_OUT_DDR: 
 097  20081                    CALL 081[take_data_in_usb]
 098  2D20D                    OUTPUT s2[DDATA], 0D[DDR_DATA_W_31_24]
 099  20081                    CALL 081[take_data_in_usb]
 09A  2D20E                    OUTPUT s2[DDATA], 0E[DDR_DATA_W_23_16]
 09B  20081                    CALL 081[take_data_in_usb]
 09C  2D20F                    OUTPUT s2[DDATA], 0F[DDR_DATA_W_15_8]
 09D  20081                    CALL 081[take_data_in_usb]
 09E  2D210                    OUTPUT s2[DDATA], 10[DDR_DATA_W_7_0]
 09F  2D212                    OUTPUT s2[DDATA], 12[WR_EN_PLS]
 0A0  25000                    RETURN 
 0A1         WRITE_1_WORD_DDR: 
 0A1  20097                    CALL 097[DATA_OUT_DDR]
 0A2  20097                    CALL 097[DATA_OUT_DDR]
 0A3                           ;OUTPUT DDATA,WR_EN_PLS
 0A3  01200                    LOAD s2[DDATA], 00                        ; write cmd
 0A4  2D213                    OUTPUT s2[DDATA], 13[WR_RD_CMD]           ; write cmd
 0A5  2D211                    OUTPUT s2[DDATA], 11[CMD_WR_PLS]
 0A6  2D215                    OUTPUT s2[DDATA], 15[DDR_ADDRESS_INC_PLS]
 0A7  25000                    RETURN 
 0A8          READ_1_WORD_DDR: 
 0A8  01201                    LOAD s2[DDATA], 01                        ; READ cmd
 0A9  2D213                    OUTPUT s2[DDATA], 13[WR_RD_CMD]           ; READ cmd
 0AA  2D211                    OUTPUT s2[DDATA], 11[CMD_WR_PLS]
 0AB  0900C    WAIT_FOR_DATA1: INPUT s0[REG1], 0C[READ_EMPTY]
 0AC  1D001                    COMPARE s0[REG1], 01
 0AD  320AB                    JUMP Z, 0AB[WAIT_FOR_DATA1]
 0AE  200B2                    CALL 0B2[DATA_IN_DDR]
 0AF  200B2                    CALL 0B2[DATA_IN_DDR]
 0B0  2D215                    OUTPUT s2[DDATA], 15[DDR_ADDRESS_INC_PLS]
 0B1  25000                    RETURN 
 0B2              DATA_IN_DDR: 
 0B2  0900C     WAIT_FOR_DATA: INPUT s0[REG1], 0C[READ_EMPTY]
 0B3  1D001                    COMPARE s0[REG1], 01
 0B4  320B2                    JUMP Z, 0B2[WAIT_FOR_DATA]
 0B5                           ;CALL DELAY_1S
 0B5  09206                    INPUT s2[DDATA], 06[DDR_DATA_R_31_24]
 0B6  20072                    CALL 072[send_one_bt_usb]
 0B7  09207                    INPUT s2[DDATA], 07[DDR_DATA_R_23_16]
 0B8  20072                    CALL 072[send_one_bt_usb]
 0B9  09208                    INPUT s2[DDATA], 08[DDR_DATA_R_15_8]
 0BA  20072                    CALL 072[send_one_bt_usb]
 0BB  09209                    INPUT s2[DDATA], 09[DDR_DATA_R_7_0]
 0BC  20072                    CALL 072[send_one_bt_usb]
 0BD  2D216                    OUTPUT s2[DDATA], 16[RD_EN_PLS]
 0BE  25000                    RETURN 
 0BF              REG_CONTROL: 
 0BF  0B203                    FETCH s2[DDATA], 03[CMD_WR_RD]
 0C0  1D257                    COMPARE s2[DDATA], 57["W"]
 0C1  320C5                    JUMP Z, 0C5[W_USER_REG]
 0C2  1D252                    COMPARE s2[DDATA], 52["R"]
 0C3  320D1                    JUMP Z, 0D1[R_USER_REG]
 0C4  22001                    JUMP 001[CHECK_FRAME]
 0C5  0B205        W_USER_REG: FETCH s2[DDATA], 05[ST_ADD_2]
 0C6  2D219                    OUTPUT s2[DDATA], 19[USER_REGADDR_15_8]
 0C7  0B204                    FETCH s2[DDATA], 04[ST_ADD_1]
 0C8  2D21A                    OUTPUT s2[DDATA], 1A[USER_REGADDR_7_0]
 0C9  0B207                    FETCH s2[DDATA], 07[N_OF_BYTE2]           ;; NOT USED
 0CA  0B206                    FETCH s2[DDATA], 06[N_OF_BYTE1]
 0CB  2D21B                    OUTPUT s2[DDATA], 1B[USER_REGDATAOUT]
 0CC  012FF                    LOAD s2[DDATA], FF
 0CD  2D208                    OUTPUT s2[DDATA], 08[USER_REGWE]          ;; WRITE ENABLE PULSE
 0CE  01200                    LOAD s2[DDATA], 00
 0CF  2D208                    OUTPUT s2[DDATA], 08[USER_REGWE]          ;; WRITE ENABLE PULSE
 0D0  22001                    JUMP 001[CHECK_FRAME]
 0D1               R_USER_REG: 
 0D1  0B205                    FETCH s2[DDATA], 05[ST_ADD_2]
 0D2  2D219                    OUTPUT s2[DDATA], 19[USER_REGADDR_15_8]
 0D3  0B204                    FETCH s2[DDATA], 04[ST_ADD_1]
 0D4  2D21A                    OUTPUT s2[DDATA], 1A[USER_REGADDR_7_0]
 0D5  0B207                    FETCH s2[DDATA], 07[N_OF_BYTE2]           ;; NOT USED
 0D6  0B206                    FETCH s2[DDATA], 06[N_OF_BYTE1]           ;; NOT USED
 0D7  2D214                    OUTPUT s2[DDATA], 14[USER_REGRE]          ;; READ ENABLE PULSE
 0D8  01225                    LOAD s2[DDATA], 25["%"]
 0D9  20072                    CALL 072[send_one_bt_usb]
 0DA  0920D                    INPUT s2[DDATA], 0D[USER_REGDATAIN]
 0DB  20072                    CALL 072[send_one_bt_usb]
 0DC  01223                    LOAD s2[DDATA], 23["#"]
 0DD  20072                    CALL 072[send_one_bt_usb]
 0DE  22001                    JUMP 001[CHECK_FRAME]
 0DF                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ALL DELAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0DF                           ;--
 0DF                           ;|1000000/416NS
 0DF                           ;|--------------------------===== CNT
 0DF                           ;|10
 0DF                           ;|--------
 0DF                           ; 10US IS 1000     (1000000/416 = 000018 HEX)   FOR 24MHZ
 0DF               DELAY_10US: 
 0DF  01F00                    LOAD sF, 00
 0E0  01E00                    LOAD sE, 00
 0E1  01D18                    LOAD sD, 18
 0E2  220F3                    JUMP 0F3[SOFTWARE_DELAY]
 0E3                           ; 10US IS 1000     (1000000/416 = 000101 HEX)   FOR 24MHZ
 0E3              DELAY_107US: 
 0E3  01F00                    LOAD sF, 00
 0E4  01E01                    LOAD sE, 01
 0E5  01D01                    LOAD sD, 01
 0E6  220F3                    JUMP 0F3[SOFTWARE_DELAY]
 0E7                           ; 1MS IS 1000     (1000/416 = 000963 HEX)   FOR 24MHZ
 0E7                DELAY_1MS: 
 0E7  01F00                    LOAD sF, 00
 0E8  01E09                    LOAD sE, 09
 0E9  01D63                    LOAD sD, 63
 0EA  220F3                    JUMP 0F3[SOFTWARE_DELAY]
 0EB                           ;
 0EB                           ; 20MS IS 20,000  100NS  (20,000/416 = 00BBCD HEX)  FOR 24MHZ
 0EB  01F00        DELAY_20MS: LOAD sF, 00
 0EC  01E5D                    LOAD sE, 5D
 0ED  01DC9                    LOAD sD, C9
 0EE  220F3                    JUMP 0F3[SOFTWARE_DELAY]
 0EF                           ;
 0EF                           ;
 0EF                           ; 1S IS 10,000,00 X 10NS      (1/416 = 24AE06 HEX)  FOR 24MHZ
 0EF  01F24          DELAY_1S: LOAD sF, 24
 0F0  01EAE                    LOAD sE, AE
 0F1  01D06                    LOAD sD, 06
 0F2  220F3                    JUMP 0F3[SOFTWARE_DELAY]
 0F3                           ;
 0F3                           ; THE DELAY LOOP DECREMENTS [S2,S1,S0] UNTIL IT REACHES ZERO
 0F3                           ; EACH DECREMENT CYCLE IS 5 INSTRUCTIONS WHICH IS 10 CLOCK CYCLES (416NS AT 24MHZ)
 0F3  00DD0    SOFTWARE_DELAY: LOAD sD, sD                               ;PAD LOOP TO MAKE IT 10 CLOCK CYCLES (5 INSTRUCTIONS)
 0F4  19D01                    SUB sD, 01[1'd]
 0F5  1BE00                    SUBCY sE, 00[0'd]
 0F6  1BF00                    SUBCY sF, 00[0'd]
 0F7  360F3                    JUMP NZ, 0F3[SOFTWARE_DELAY]
 0F8  25000                    RETURN 
 0F9                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


All unused memory locations contain zero (equivalent to 'LOAD s0, s0')



List of PSM files that have been assembled

E:\KITCODE\sp6_lpddr_v1\pico_ddr_bram_ftdififo\pico_code\PICO_CODE.psm



List of defined constants

 CONSTANT name       Value        Source PSM File

 timestamp_hours     00'd         
 timestamp_minutes   45'd         
 timestamp_seconds   17'd         
 datestamp_year      20'd         
 datestamp_month     7'd          
 datestamp_day       29'd         
 NUL                 00           
 BEL                 07           
 BS                  08           
 HT                  09           
 LF                  0A           
 VT                  0B           
 CR                  0D           
 ESC                 1B           
 DEL                 7F           
 DCS                 90           
 ST                  9C           
 RX_DT_RDY           02           PICO_CODE.psm
 RX_DATA             03           PICO_CODE.psm
 LED                 01           PICO_CODE.psm
 TX_DATA             02           PICO_CODE.psm
 TX_STB              03           PICO_CODE.psm
 RD_PULSE            04           PICO_CODE.psm
 USB_DATA_OUT        0B           PICO_CODE.psm
 USB_DATA_IN         02           PICO_CODE.psm
 USB_RD_WR           0A           PICO_CODE.psm
 usb_rxf             04           PICO_CODE.psm
 usb_txe             03           PICO_CODE.psm
 usb_rd              0C           PICO_CODE.psm
 usb_wr              09           PICO_CODE.psm
 BRAM_DATA_IN        05           PICO_CODE.psm
 BRAM_W              08           PICO_CODE.psm
 BRAM_ADR_70         06           PICO_CODE.psm
 BRAM_ADR_158        07           PICO_CODE.psm
 BRAM_DATA_OUT       05           PICO_CODE.psm
 DDR_DATA_W_31_24    13'd         PICO_CODE.psm
 DDR_DATA_W_23_16    14'd         PICO_CODE.psm
 DDR_DATA_W_15_8     15'd         PICO_CODE.psm
 DDR_DATA_W_7_0      16'd         PICO_CODE.psm
 CMD_WR_PLS          17'd         PICO_CODE.psm
 WR_EN_PLS           18'd         PICO_CODE.psm
 WR_RD_CMD           19'd         PICO_CODE.psm
 DDR_DATA_R_31_24    06'd         PICO_CODE.psm
 DDR_DATA_R_23_16    07'd         PICO_CODE.psm
 DDR_DATA_R_15_8     08'd         PICO_CODE.psm
 DDR_DATA_R_7_0      09'd         PICO_CODE.psm
 READ_EMPTY          12'd         PICO_CODE.psm
 DDR_ADDRESS_INC_PLS 21'd         PICO_CODE.psm
 RD_EN_PLS           22'd         PICO_CODE.psm
 DDR_ADDRESS_RESET_W 23'd         PICO_CODE.psm
 DDR_ADDRESS_RESET_R 23'd         PICO_CODE.psm
 USER_REGADDR_15_8   25'd         PICO_CODE.psm
 USER_REGADDR_7_0    26'd         PICO_CODE.psm
 USER_REGDATAOUT     27'd         PICO_CODE.psm
 USER_REGWE          8'd          PICO_CODE.psm
 USER_REGRE          20'd         PICO_CODE.psm
 USER_REGDATAIN      13'd         PICO_CODE.psm
 UR_DATA_RAM         01           PICO_CODE.psm
 DDR_BRAM            02           PICO_CODE.psm
 CMD_WR_RD           03           PICO_CODE.psm
 ST_ADD_1            04           PICO_CODE.psm
 ST_ADD_2            05           PICO_CODE.psm
 N_OF_BYTE1          06           PICO_CODE.psm
 N_OF_BYTE2          07           PICO_CODE.psm
 BT_CNT1             08           PICO_CODE.psm
 BT_CNT2             09           PICO_CODE.psm
 BUFF_AD1            0A           PICO_CODE.psm
 BUFF_AD2            0B           PICO_CODE.psm
 DELL1               36           PICO_CODE.psm
 DELL2               37           PICO_CODE.psm
 DELL3               38           PICO_CODE.psm
 DELL4               39           PICO_CODE.psm
 DELL5               3A           PICO_CODE.psm
 DELL6               3B           PICO_CODE.psm
 RDID_9F             9F           PICO_CODE.psm
 WREN_06             06           PICO_CODE.psm
 PP_02               02           PICO_CODE.psm
 READ_03             03           PICO_CODE.psm
 RDSR_05             05           PICO_CODE.psm
 SE_D8               D8           PICO_CODE.psm
 WRSR_01             01           PICO_CODE.psm
 BE_C7               C7           PICO_CODE.psm
 DELAY_1US_CONSTANT  0B           PICO_CODE.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.70"        
 datestamp$        "29 Jul 2020"  
 timestamp$        "00:45:17"     



List of line labels

   Label              Addr  Source PSM File

   CHECK_FRAME        001   PICO_CODE.psm
 * START              013   PICO_CODE.psm
   HJGF               01D   PICO_CODE.psm
   WR_DDR_RAM         01E   PICO_CODE.psm
   TAKE_NXT_BYT       026   PICO_CODE.psm
   WR_DDR             02D   PICO_CODE.psm
   WR_BRAM            02F   PICO_CODE.psm
   NXT_LOOP           031   PICO_CODE.psm
   RD_DDR_RAM         03E   PICO_CODE.psm
   SEND_NXT_BYT       046   PICO_CODE.psm
   RD_DDR             04D   PICO_CODE.psm
   RD_BRAM            04F   PICO_CODE.psm
   NXT_LOOP1          052   PICO_CODE.psm
   WR_BRAM_DATA       05F   PICO_CODE.psm
   INC_BRAM_ADDRESS   062   PICO_CODE.psm
   CHK_DT_PRESENT     06B   PICO_CODE.psm
   send_one_bt_usb    072   PICO_CODE.psm
   wr_rdy_chk         072   PICO_CODE.psm
   take_data_in_usb   081   PICO_CODE.psm
 * LED_BLINK          089   PICO_CODE.psm
   LP1                089   PICO_CODE.psm
   DATA_OUT_DDR       097   PICO_CODE.psm
   WRITE_1_WORD_DDR   0A1   PICO_CODE.psm
   READ_1_WORD_DDR    0A8   PICO_CODE.psm
   WAIT_FOR_DATA1     0AB   PICO_CODE.psm
   DATA_IN_DDR        0B2   PICO_CODE.psm
   WAIT_FOR_DATA      0B2   PICO_CODE.psm
   REG_CONTROL        0BF   PICO_CODE.psm
   W_USER_REG         0C5   PICO_CODE.psm
   R_USER_REG         0D1   PICO_CODE.psm
 * DELAY_10US         0DF   PICO_CODE.psm
   DELAY_107US        0E3   PICO_CODE.psm
 * DELAY_1MS          0E7   PICO_CODE.psm
   DELAY_20MS         0EB   PICO_CODE.psm
 * DELAY_1S           0EF   PICO_CODE.psm
   SOFTWARE_DELAY     0F3   PICO_CODE.psm

      * Line label has not been referenced in any instructions.
        Hint - This may indicate unused code that could be
               removed to reduce the size of this program.



Instruction usage statistics

 Instruction    Instances

 LOAD             31
 STAR              -

 AND               -
 OR                -
 XOR               -

 ADD               3
 ADDCY             3
 SUB               2
 SUBCY             2

 TEST              2
 TESTCY            -
 COMPARE          19
 COMPARECY         -

 SL0               -
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           -

 INPUT            13
 OUTPUT           36
 OUTPUTK           -

 STORE            29
 FETCH            29

 DISABLE           -
 ENABLE            -
 RETURNI           -

 JUMP             33
 JUMP@             -
 CALL             41
 CALL@             -
 RETURN           15
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
