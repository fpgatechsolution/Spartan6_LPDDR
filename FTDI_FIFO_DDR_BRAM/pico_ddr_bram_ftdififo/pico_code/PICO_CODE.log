KCPSM6 Assembler log file for program 'E:\KITCODE\sp6_lpddr_v1\pico_ddr_bram_ftdififo\pico_code\PICO_CODE.psm'.
Generated by KCPSM6 version v2.70
Ken Chapman - Xilinx Ltd - 16th May 2014

Assembly datestamp: 27 Jul 2020
Assembly timestamp: 13:10:40

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 0D5 hex
Nominal program memory size: 1K (1024)   address(9:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 214
Memory locations available: 3882


Assembly listing

 Addr Code                     Instruction

 000                           ;NAMEREG S1,
 000                           ;NAMEREG S2,HH
 000                           ;NAMEREG S3,TOGL_REG
 000                           NAMEREG s0, REG1
 000                           NAMEREG s1, REG2
 000                           NAMEREG s2, DDATA
 000                           NAMEREG s3, REG
 000                           NAMEREG s4, REG4
 000                           NAMEREG s5, TEMP
 000                           NAMEREG s6, DATA
 000                           NAMEREG s7, CNTR1
 000                           NAMEREG s8, CNTR2
 000                           NAMEREG s9, SPI_REG
 000                           NAMEREG sA, ADDR1                         ; LSB ADDRES
 000                           NAMEREG sB, ADDR2
 000                           NAMEREG sC, ADDR3
 000                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000                           ;--------------------------------------------------
 000                           CONSTANT RX_DT_RDY, 02                    ;////// INPUT
 000                           CONSTANT RX_DATA, 03                      ;////// INPUT
 000                           CONSTANT LED, 01
 000                           CONSTANT TX_DATA, 02
 000                           CONSTANT TX_STB, 03
 000                           CONSTANT RD_PULSE, 04
 000                           ;//USB
 000                           CONSTANT USB_DATA_OUT, 0B                 ;;DSOUT     2
 000                           CONSTANT USB_DATA_IN, 02                  ;;DSIN      1
 000                           CONSTANT USB_RD_WR, 0A                    ;;DSOUT     3
 000                           CONSTANT usb_rxf, 04                      ;;DSIN      3
 000                           CONSTANT usb_txe, 03                      ;;DSIN      2
 000                           CONSTANT usb_rd, 0C                       ;;DSOUT     1
 000                           CONSTANT usb_wr, 09                       ;;DSOUT     4
 000                           ;// BRAM
 000                           CONSTANT BRAM_DATA_IN, 05                 ;;DSIN      1
 000                           CONSTANT BRAM_W, 08                       ;;DSOUT     1
 000                           CONSTANT BRAM_ADR_70, 06                  ;;DSOUT     1
 000                           CONSTANT BRAM_ADR_158, 07                 ;;DSOUT
 000                           CONSTANT BRAM_DATA_OUT, 05                ;;DSOUT
 000                           ;//////////ddr write
 000                           CONSTANT DDR_DATA_W_31_24, 13'd           ;;DSOUT
 000                           CONSTANT DDR_DATA_W_23_16, 14'd           ;;DSOUT
 000                           CONSTANT DDR_DATA_W_15_8, 15'd            ;;DSOUT
 000                           CONSTANT DDR_DATA_W_7_0, 16'd             ;;DSOUT
 000                           CONSTANT CMD_WR_PLS, 17'd                 ;;DSOUT
 000                           CONSTANT WR_EN_PLS, 18'd                  ;;DSOUT
 000                           CONSTANT WR_RD_CMD, 19'd                  ;;DSOUT  ;;;0 for write 1 for read
 000                           ;//////////ddr_read
 000                           CONSTANT DDR_DATA_R_31_24, 06'd           ;;DSIN
 000                           CONSTANT DDR_DATA_R_23_16, 07'd           ;;DSIN
 000                           CONSTANT DDR_DATA_R_15_8, 08'd            ;;DSIN
 000                           CONSTANT DDR_DATA_R_7_0, 09'd             ;;DSIN
 000                           CONSTANT READ_EMPTY, 12'd                 ;;DSIN
 000                           CONSTANT DDR_ADDRESS_INC_PLS, 21'd        ;;DSOUT
 000                           CONSTANT RD_EN_PLS, 22'd                  ;;DSOUT
 000                           CONSTANT DDR_ADDRESS_RESET_W, 23'd        ;;DSOUT
 000                           CONSTANT DDR_ADDRESS_RESET_R, 23'd        ;;DSOUT
 000                           ;*************************
 000                           ;; SCRATCHPAD MEMORY
 000                           ;*************************
 000                           CONSTANT UR_DATA_RAM, 01
 000                           CONSTANT DDR_BRAM, 02
 000                           CONSTANT CMD_WR_RD, 03
 000                           CONSTANT ST_ADD_1, 04
 000                           CONSTANT ST_ADD_2, 05
 000                           CONSTANT N_OF_BYTE1, 06
 000                           CONSTANT N_OF_BYTE2, 07
 000                           CONSTANT BT_CNT1, 08
 000                           CONSTANT BT_CNT2, 09
 000                           CONSTANT BUFF_AD1, 0A
 000                           CONSTANT BUFF_AD2, 0B
 000                           ;CONSTANT UR_DATA_RAM,01
 000                           ;CONSTANT UR_DATA_RAM,01
 000                           ;CONSTANT UR_DATA_RAM,01
 000                           CONSTANT DELL1, 36
 000                           CONSTANT DELL2, 37
 000                           CONSTANT DELL3, 38
 000                           CONSTANT DELL4, 39
 000                           CONSTANT DELL5, 3A
 000                           CONSTANT DELL6, 3B
 000                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000                           CONSTANT RDID_9F, 9F
 000                           CONSTANT WREN_06, 06
 000                           CONSTANT PP_02, 02
 000                           CONSTANT READ_03, 03
 000                           CONSTANT RDSR_05, 05
 000                           CONSTANT SE_D8, D8
 000                           CONSTANT WRSR_01, 01
 000                           CONSTANT BE_C7, C7
 000                           CONSTANT DELAY_1US_CONSTANT, 0B           ;CONSTANT VALUE FOR DELAY RUTNS
 000  2006F                    CALL 06F[send_one_bt_usb]
 001                           ;test_ddr: call take_data_in_usb
 001                           ;   COMPARE DDATA,"$"
 001                           ;   JUMP NZ, test_ddr
 001                           ;
 001                           ;
 001                           ; OUTPUT DDATA,DDR_ADDRESS_RESET_W
 001                           ;
 001                           ;
 001                           ;
 001                           ; CALL WRITE_1_WORD_DDR
 001                           ;
 001                           ;
 001                           ;
 001                           ; CALL DELAY_10US
 001                           ; OUTPUT DDATA,DDR_ADDRESS_RESET_R
 001                           ;
 001                           ;
 001                           ; CALL READ_1_WORD_DDR
 001                           ;
 001                           ;
 001                           ;
 001                           ;
 001                           ;
 001                           ; CALL DELAY_10US
 001                           ; CALL DELAY_20MS
 001                           ;
 001                           ;
 001                           ;
 001                           ;call test_ddr
 001                           ;
 001                           ;
 001                           ;
 001                           ; ASD: JUMP ASD
 001                           ;
 001              CHECK_FRAME: ;$ D/B 12 34 R/W #** DATA
 001  2007E                    CALL 07E[take_data_in_usb]
 002  1D224                    COMPARE s2[DDATA], 24["$"]
 003  36001                    JUMP NZ, 001[CHECK_FRAME]
 004  2007E                    CALL 07E[take_data_in_usb]
 005  2F202                    STORE s2[DDATA], 02[DDR_BRAM]
 006  2007E                    CALL 07E[take_data_in_usb]                ;START ADDR1
 007  2F205                    STORE s2[DDATA], 05[ST_ADD_2]
 008  2007E                    CALL 07E[take_data_in_usb]                ;START ADDR2
 009  2F204                    STORE s2[DDATA], 04[ST_ADD_1]
 00A  2007E                    CALL 07E[take_data_in_usb]                ;NO OF BYTES1
 00B  2F207                    STORE s2[DDATA], 07[N_OF_BYTE2]
 00C  2007E                    CALL 07E[take_data_in_usb]                ;;NO OF BYTES2;;;;;7 TO 0
 00D  2F206                    STORE s2[DDATA], 06[N_OF_BYTE1]
 00E  2007E                    CALL 07E[take_data_in_usb]
 00F  2F203                    STORE s2[DDATA], 03[CMD_WR_RD]
 010  2007E                    CALL 07E[take_data_in_usb]
 011  1D223                    COMPARE s2[DDATA], 23["#"]
 012  36001                    JUMP NZ, 001[CHECK_FRAME]
 013                    START: 
 013  0B203                    FETCH s2[DDATA], 03[CMD_WR_RD]
 014  1D252                    COMPARE s2[DDATA], 52["R"]
 015  3003B                    CALL Z, 03B[RD_DDR_RAM]
 016  1D257                    COMPARE s2[DDATA], 57["W"]
 017  3001B                    CALL Z, 01B[WR_DDR_RAM]
 018  22001                    JUMP 001[CHECK_FRAME]
 019                           ;
 019  22001                    JUMP 001[CHECK_FRAME]
 01A  2201A              HJGF: JUMP 01A[HJGF]
 01B               WR_DDR_RAM: 
 01B  2D017                    OUTPUT s0[REG1], 17[DDR_ADDRESS_RESET_W]
 01C  0B004                    FETCH s0[REG1], 04[ST_ADD_1]
 01D  2F00A                    STORE s0[REG1], 0A[BUFF_AD1]
 01E  0B005                    FETCH s0[REG1], 05[ST_ADD_2]
 01F  2F00B                    STORE s0[REG1], 0B[BUFF_AD2]
 020  01000                    LOAD s0[REG1], 00
 021  2F008                    STORE s0[REG1], 08[BT_CNT1]
 022  2F009                    STORE s0[REG1], 09[BT_CNT2]
 023             TAKE_NXT_BYT: 
 023  0B202                    FETCH s2[DDATA], 02[DDR_BRAM]
 024  1D244                    COMPARE s2[DDATA], 44["D"]
 025  3202A                    JUMP Z, 02A[WR_DDR]
 026  0B202                    FETCH s2[DDATA], 02[DDR_BRAM]
 027  1D242                    COMPARE s2[DDATA], 42["B"]
 028  3202C                    JUMP Z, 02C[WR_BRAM]
 029  25000                    RETURN 
 02A                   WR_DDR: 
 02A  2009E                    CALL 09E[WRITE_1_WORD_DDR]
 02B  2202E                    JUMP 02E[NXT_LOOP]
 02C                  WR_BRAM: 
 02C  2007E                    CALL 07E[take_data_in_usb]
 02D  2005C                    CALL 05C[WR_BRAM_DATA]
 02E                 NXT_LOOP: 
 02E  0B708                    FETCH s7[CNTR1], 08[BT_CNT1]
 02F  0B809                    FETCH s8[CNTR2], 09[BT_CNT2]
 030  11701                    ADD s7[CNTR1], 01
 031  13800                    ADDCY s8[CNTR2], 00
 032  2F708                    STORE s7[CNTR1], 08[BT_CNT1]
 033  2F809                    STORE s8[CNTR2], 09[BT_CNT2]
 034  0BA06                    FETCH sA[ADDR1], 06[N_OF_BYTE1]
 035  0BB07                    FETCH sB[ADDR2], 07[N_OF_BYTE2]
 036  1CA70                    COMPARE sA[ADDR1], s7[CNTR1]
 037  36023                    JUMP NZ, 023[TAKE_NXT_BYT]
 038  1CB80                    COMPARE sB[ADDR2], s8[CNTR2]
 039  36023                    JUMP NZ, 023[TAKE_NXT_BYT]
 03A  25000                    RETURN 
 03B               RD_DDR_RAM: 
 03B  2D017                    OUTPUT s0[REG1], 17[DDR_ADDRESS_RESET_R]
 03C  01000                    LOAD s0[REG1], 00
 03D  2F008                    STORE s0[REG1], 08[BT_CNT1]
 03E  2F009                    STORE s0[REG1], 09[BT_CNT2]
 03F  0B004                    FETCH s0[REG1], 04[ST_ADD_1]
 040  2F00A                    STORE s0[REG1], 0A[BUFF_AD1]
 041  0B005                    FETCH s0[REG1], 05[ST_ADD_2]
 042  2F00B                    STORE s0[REG1], 0B[BUFF_AD2]
 043             SEND_NXT_BYT: 
 043  0B202                    FETCH s2[DDATA], 02[DDR_BRAM]
 044  1D244                    COMPARE s2[DDATA], 44["D"]
 045  3204A                    JUMP Z, 04A[RD_DDR]
 046  0B202                    FETCH s2[DDATA], 02[DDR_BRAM]
 047  1D242                    COMPARE s2[DDATA], 42["B"]
 048  3204C                    JUMP Z, 04C[RD_BRAM]
 049  25000                    RETURN 
 04A                   RD_DDR: 
 04A  200A5                    CALL 0A5[READ_1_WORD_DDR]
 04B  2204F                    JUMP 04F[NXT_LOOP1]
 04C                  RD_BRAM: 
 04C  2005F                    CALL 05F[INC_BRAM_ADDRESS]
 04D  09205                    INPUT s2[DDATA], 05[BRAM_DATA_IN]
 04E  2006F                    CALL 06F[send_one_bt_usb]
 04F                NXT_LOOP1: 
 04F  0B708                    FETCH s7[CNTR1], 08[BT_CNT1]
 050  0B809                    FETCH s8[CNTR2], 09[BT_CNT2]
 051  11701                    ADD s7[CNTR1], 01
 052  13800                    ADDCY s8[CNTR2], 00
 053  2F708                    STORE s7[CNTR1], 08[BT_CNT1]
 054  2F809                    STORE s8[CNTR2], 09[BT_CNT2]
 055  0BA06                    FETCH sA[ADDR1], 06[N_OF_BYTE1]
 056  0BB07                    FETCH sB[ADDR2], 07[N_OF_BYTE2]
 057  1CA70                    COMPARE sA[ADDR1], s7[CNTR1]
 058  36043                    JUMP NZ, 043[SEND_NXT_BYT]
 059  1CB80                    COMPARE sB[ADDR2], s8[CNTR2]
 05A  36043                    JUMP NZ, 043[SEND_NXT_BYT]
 05B  25000                    RETURN 
 05C             WR_BRAM_DATA: 
 05C  2D205                    OUTPUT s2[DDATA], 05[BRAM_DATA_OUT]
 05D  2005F                    CALL 05F[INC_BRAM_ADDRESS]
 05E  25000                    RETURN 
 05F  0BA0A  INC_BRAM_ADDRESS: FETCH sA[ADDR1], 0A[BUFF_AD1]
 060  0BB0B                    FETCH sB[ADDR2], 0B[BUFF_AD2]
 061  11A01                    ADD sA[ADDR1], 01
 062  13B00                    ADDCY sB[ADDR2], 00
 063  2DA06                    OUTPUT sA[ADDR1], 06[BRAM_ADR_70]
 064  2DB07                    OUTPUT sB[ADDR2], 07[BRAM_ADR_158]
 065  2FA0A                    STORE sA[ADDR1], 0A[BUFF_AD1]
 066  2FB0B                    STORE sB[ADDR2], 0B[BUFF_AD2]
 067  25000                    RETURN 
 068           CHK_DT_PRESENT: 
 068  09002                    INPUT s0[REG1], 02[RX_DT_RDY]
 069  1D001                    COMPARE s0[REG1], 01[00000001'b]
 06A  36068                    JUMP NZ, 068[CHK_DT_PRESENT]
 06B  2D004                    OUTPUT s0[REG1], 04[RD_PULSE]
 06C  09003                    INPUT s0[REG1], 03[RX_DATA]
 06D  2D001                    OUTPUT s0[REG1], 01[LED]
 06E  25000                    RETURN 
 06F          send_one_bt_usb: 
 06F               wr_rdy_chk: 
 06F  09003                    INPUT s0[REG1], 03[usb_txe]
 070  0D001                    TEST s0[REG1], 01[00000001'b]
 071  3606F                    JUMP NZ, 06F[wr_rdy_chk]
 072  01000                    LOAD s0[REG1], 00
 073  2D00A                    OUTPUT s0[REG1], 0A[USB_RD_WR]
 074  2D20B                    OUTPUT s2[DDATA], 0B[USB_DATA_OUT]
 075  01000                    LOAD s0[REG1], 00
 076  2D009                    OUTPUT s0[REG1], 09[usb_wr]
 077  010FF                    LOAD s0[REG1], FF
 078  2D009                    OUTPUT s0[REG1], 09[usb_wr]
 079  200C0                    CALL 0C0[DELAY_107US]
 07A  200C0                    CALL 0C0[DELAY_107US]
 07B  010FF                    LOAD s0[REG1], FF
 07C  2D00A                    OUTPUT s0[REG1], 0A[USB_RD_WR]
 07D  25000                    RETURN 
 07E         take_data_in_usb: 
 07E  09004                    INPUT s0[REG1], 04[usb_rxf]
 07F  0D001                    TEST s0[REG1], 01[00000001'b]
 080  3607E                    JUMP NZ, 07E[take_data_in_usb]
 081  010FF                    LOAD s0[REG1], FF
 082  2D00A                    OUTPUT s0[REG1], 0A[USB_RD_WR]
 083  2D00C                    OUTPUT s0[REG1], 0C[usb_rd]
 084  09202                    INPUT s2[DDATA], 02[USB_DATA_IN]
 085  25000                    RETURN 
 086                LED_BLINK: 
 086  19001               LP1: SUB s0[REG1], 01
 087  016AA                    LOAD s6[DATA], AA
 088  2D601                    OUTPUT s6[DATA], 01[LED]
 089  200C8                    CALL 0C8[DELAY_20MS]
 08A  200C8                    CALL 0C8[DELAY_20MS]
 08B  01655                    LOAD s6[DATA], 55
 08C  2D601                    OUTPUT s6[DATA], 01[LED]
 08D  200C8                    CALL 0C8[DELAY_20MS]
 08E  200C8                    CALL 0C8[DELAY_20MS]
 08F  200C8                    CALL 0C8[DELAY_20MS]
 090  200C8                    CALL 0C8[DELAY_20MS]
 091  1D000                    COMPARE s0[REG1], 00
 092  36086                    JUMP NZ, 086[LP1]
 093  25000                    RETURN 
 094             DATA_OUT_DDR: 
 094  2007E                    CALL 07E[take_data_in_usb]
 095  2D20D                    OUTPUT s2[DDATA], 0D[DDR_DATA_W_31_24]
 096  2007E                    CALL 07E[take_data_in_usb]
 097  2D20E                    OUTPUT s2[DDATA], 0E[DDR_DATA_W_23_16]
 098  2007E                    CALL 07E[take_data_in_usb]
 099  2D20F                    OUTPUT s2[DDATA], 0F[DDR_DATA_W_15_8]
 09A  2007E                    CALL 07E[take_data_in_usb]
 09B  2D210                    OUTPUT s2[DDATA], 10[DDR_DATA_W_7_0]
 09C  2D212                    OUTPUT s2[DDATA], 12[WR_EN_PLS]
 09D  25000                    RETURN 
 09E         WRITE_1_WORD_DDR: 
 09E  20094                    CALL 094[DATA_OUT_DDR]
 09F  20094                    CALL 094[DATA_OUT_DDR]
 0A0                           ;OUTPUT DDATA,WR_EN_PLS
 0A0  01200                    LOAD s2[DDATA], 00                        ; write cmd
 0A1  2D213                    OUTPUT s2[DDATA], 13[WR_RD_CMD]           ; write cmd
 0A2  2D211                    OUTPUT s2[DDATA], 11[CMD_WR_PLS]
 0A3  2D215                    OUTPUT s2[DDATA], 15[DDR_ADDRESS_INC_PLS]
 0A4  25000                    RETURN 
 0A5          READ_1_WORD_DDR: 
 0A5  01201                    LOAD s2[DDATA], 01                        ; READ cmd
 0A6  2D213                    OUTPUT s2[DDATA], 13[WR_RD_CMD]           ; READ cmd
 0A7  2D211                    OUTPUT s2[DDATA], 11[CMD_WR_PLS]
 0A8  0900C    WAIT_FOR_DATA1: INPUT s0[REG1], 0C[READ_EMPTY]
 0A9  1D001                    COMPARE s0[REG1], 01
 0AA  320A8                    JUMP Z, 0A8[WAIT_FOR_DATA1]
 0AB  200AF                    CALL 0AF[DATA_IN_DDR]
 0AC  200AF                    CALL 0AF[DATA_IN_DDR]
 0AD  2D215                    OUTPUT s2[DDATA], 15[DDR_ADDRESS_INC_PLS]
 0AE  25000                    RETURN 
 0AF              DATA_IN_DDR: 
 0AF  0900C     WAIT_FOR_DATA: INPUT s0[REG1], 0C[READ_EMPTY]
 0B0  1D001                    COMPARE s0[REG1], 01
 0B1  320AF                    JUMP Z, 0AF[WAIT_FOR_DATA]
 0B2                           ;CALL DELAY_1S
 0B2  09206                    INPUT s2[DDATA], 06[DDR_DATA_R_31_24]
 0B3  2006F                    CALL 06F[send_one_bt_usb]
 0B4  09207                    INPUT s2[DDATA], 07[DDR_DATA_R_23_16]
 0B5  2006F                    CALL 06F[send_one_bt_usb]
 0B6  09208                    INPUT s2[DDATA], 08[DDR_DATA_R_15_8]
 0B7  2006F                    CALL 06F[send_one_bt_usb]
 0B8  09209                    INPUT s2[DDATA], 09[DDR_DATA_R_7_0]
 0B9  2006F                    CALL 06F[send_one_bt_usb]
 0BA  2D216                    OUTPUT s2[DDATA], 16[RD_EN_PLS]
 0BB  25000                    RETURN 
 0BC                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ALL DELAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0BC                           ;--
 0BC                           ;|1000000/416NS
 0BC                           ;|--------------------------===== CNT
 0BC                           ;|10
 0BC                           ;|--------
 0BC                           ; 10US IS 1000     (1000000/416 = 000018 HEX)   FOR 24MHZ
 0BC               DELAY_10US: 
 0BC  01F00                    LOAD sF, 00
 0BD  01E00                    LOAD sE, 00
 0BE  01D18                    LOAD sD, 18
 0BF  220D0                    JUMP 0D0[SOFTWARE_DELAY]
 0C0                           ; 10US IS 1000     (1000000/416 = 000101 HEX)   FOR 24MHZ
 0C0              DELAY_107US: 
 0C0  01F00                    LOAD sF, 00
 0C1  01E01                    LOAD sE, 01
 0C2  01D01                    LOAD sD, 01
 0C3  220D0                    JUMP 0D0[SOFTWARE_DELAY]
 0C4                           ; 1MS IS 1000     (1000/416 = 000963 HEX)   FOR 24MHZ
 0C4                DELAY_1MS: 
 0C4  01F00                    LOAD sF, 00
 0C5  01E09                    LOAD sE, 09
 0C6  01D63                    LOAD sD, 63
 0C7  220D0                    JUMP 0D0[SOFTWARE_DELAY]
 0C8                           ;
 0C8                           ; 20MS IS 20,000  100NS  (20,000/416 = 00BBCD HEX)  FOR 24MHZ
 0C8  01F00        DELAY_20MS: LOAD sF, 00
 0C9  01E5D                    LOAD sE, 5D
 0CA  01DC9                    LOAD sD, C9
 0CB  220D0                    JUMP 0D0[SOFTWARE_DELAY]
 0CC                           ;
 0CC                           ;
 0CC                           ; 1S IS 10,000,00 X 10NS      (1/416 = 24AE06 HEX)  FOR 24MHZ
 0CC  01F24          DELAY_1S: LOAD sF, 24
 0CD  01EAE                    LOAD sE, AE
 0CE  01D06                    LOAD sD, 06
 0CF  220D0                    JUMP 0D0[SOFTWARE_DELAY]
 0D0                           ;
 0D0                           ; THE DELAY LOOP DECREMENTS [S2,S1,S0] UNTIL IT REACHES ZERO
 0D0                           ; EACH DECREMENT CYCLE IS 5 INSTRUCTIONS WHICH IS 10 CLOCK CYCLES (416NS AT 24MHZ)
 0D0  00DD0    SOFTWARE_DELAY: LOAD sD, sD                               ;PAD LOOP TO MAKE IT 10 CLOCK CYCLES (5 INSTRUCTIONS)
 0D1  19D01                    SUB sD, 01[1'd]
 0D2  1BE00                    SUBCY sE, 00[0'd]
 0D3  1BF00                    SUBCY sF, 00[0'd]
 0D4  360D0                    JUMP NZ, 0D0[SOFTWARE_DELAY]
 0D5  25000                    RETURN 
 0D6                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


All unused memory locations contain zero (equivalent to 'LOAD s0, s0')



List of PSM files that have been assembled

E:\KITCODE\sp6_lpddr_v1\pico_ddr_bram_ftdififo\pico_code\PICO_CODE.psm



List of defined constants

 CONSTANT name       Value        Source PSM File

 timestamp_hours     13'd         
 timestamp_minutes   10'd         
 timestamp_seconds   40'd         
 datestamp_year      20'd         
 datestamp_month     7'd          
 datestamp_day       27'd         
 NUL                 00           
 BEL                 07           
 BS                  08           
 HT                  09           
 LF                  0A           
 VT                  0B           
 CR                  0D           
 ESC                 1B           
 DEL                 7F           
 DCS                 90           
 ST                  9C           
 RX_DT_RDY           02           PICO_CODE.psm
 RX_DATA             03           PICO_CODE.psm
 LED                 01           PICO_CODE.psm
 TX_DATA             02           PICO_CODE.psm
 TX_STB              03           PICO_CODE.psm
 RD_PULSE            04           PICO_CODE.psm
 USB_DATA_OUT        0B           PICO_CODE.psm
 USB_DATA_IN         02           PICO_CODE.psm
 USB_RD_WR           0A           PICO_CODE.psm
 usb_rxf             04           PICO_CODE.psm
 usb_txe             03           PICO_CODE.psm
 usb_rd              0C           PICO_CODE.psm
 usb_wr              09           PICO_CODE.psm
 BRAM_DATA_IN        05           PICO_CODE.psm
 BRAM_W              08           PICO_CODE.psm
 BRAM_ADR_70         06           PICO_CODE.psm
 BRAM_ADR_158        07           PICO_CODE.psm
 BRAM_DATA_OUT       05           PICO_CODE.psm
 DDR_DATA_W_31_24    13'd         PICO_CODE.psm
 DDR_DATA_W_23_16    14'd         PICO_CODE.psm
 DDR_DATA_W_15_8     15'd         PICO_CODE.psm
 DDR_DATA_W_7_0      16'd         PICO_CODE.psm
 CMD_WR_PLS          17'd         PICO_CODE.psm
 WR_EN_PLS           18'd         PICO_CODE.psm
 WR_RD_CMD           19'd         PICO_CODE.psm
 DDR_DATA_R_31_24    06'd         PICO_CODE.psm
 DDR_DATA_R_23_16    07'd         PICO_CODE.psm
 DDR_DATA_R_15_8     08'd         PICO_CODE.psm
 DDR_DATA_R_7_0      09'd         PICO_CODE.psm
 READ_EMPTY          12'd         PICO_CODE.psm
 DDR_ADDRESS_INC_PLS 21'd         PICO_CODE.psm
 RD_EN_PLS           22'd         PICO_CODE.psm
 DDR_ADDRESS_RESET_W 23'd         PICO_CODE.psm
 DDR_ADDRESS_RESET_R 23'd         PICO_CODE.psm
 UR_DATA_RAM         01           PICO_CODE.psm
 DDR_BRAM            02           PICO_CODE.psm
 CMD_WR_RD           03           PICO_CODE.psm
 ST_ADD_1            04           PICO_CODE.psm
 ST_ADD_2            05           PICO_CODE.psm
 N_OF_BYTE1          06           PICO_CODE.psm
 N_OF_BYTE2          07           PICO_CODE.psm
 BT_CNT1             08           PICO_CODE.psm
 BT_CNT2             09           PICO_CODE.psm
 BUFF_AD1            0A           PICO_CODE.psm
 BUFF_AD2            0B           PICO_CODE.psm
 DELL1               36           PICO_CODE.psm
 DELL2               37           PICO_CODE.psm
 DELL3               38           PICO_CODE.psm
 DELL4               39           PICO_CODE.psm
 DELL5               3A           PICO_CODE.psm
 DELL6               3B           PICO_CODE.psm
 RDID_9F             9F           PICO_CODE.psm
 WREN_06             06           PICO_CODE.psm
 PP_02               02           PICO_CODE.psm
 READ_03             03           PICO_CODE.psm
 RDSR_05             05           PICO_CODE.psm
 SE_D8               D8           PICO_CODE.psm
 WRSR_01             01           PICO_CODE.psm
 BE_C7               C7           PICO_CODE.psm
 DELAY_1US_CONSTANT  0B           PICO_CODE.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.70"        
 datestamp$        "27 Jul 2020"  
 timestamp$        "13:10:40"     



List of line labels

   Label              Addr  Source PSM File

   CHECK_FRAME        001   PICO_CODE.psm
 * START              013   PICO_CODE.psm
   HJGF               01A   PICO_CODE.psm
   WR_DDR_RAM         01B   PICO_CODE.psm
   TAKE_NXT_BYT       023   PICO_CODE.psm
   WR_DDR             02A   PICO_CODE.psm
   WR_BRAM            02C   PICO_CODE.psm
   NXT_LOOP           02E   PICO_CODE.psm
   RD_DDR_RAM         03B   PICO_CODE.psm
   SEND_NXT_BYT       043   PICO_CODE.psm
   RD_DDR             04A   PICO_CODE.psm
   RD_BRAM            04C   PICO_CODE.psm
   NXT_LOOP1          04F   PICO_CODE.psm
   WR_BRAM_DATA       05C   PICO_CODE.psm
   INC_BRAM_ADDRESS   05F   PICO_CODE.psm
   CHK_DT_PRESENT     068   PICO_CODE.psm
   send_one_bt_usb    06F   PICO_CODE.psm
   wr_rdy_chk         06F   PICO_CODE.psm
   take_data_in_usb   07E   PICO_CODE.psm
 * LED_BLINK          086   PICO_CODE.psm
   LP1                086   PICO_CODE.psm
   DATA_OUT_DDR       094   PICO_CODE.psm
   WRITE_1_WORD_DDR   09E   PICO_CODE.psm
   READ_1_WORD_DDR    0A5   PICO_CODE.psm
   WAIT_FOR_DATA1     0A8   PICO_CODE.psm
   DATA_IN_DDR        0AF   PICO_CODE.psm
   WAIT_FOR_DATA      0AF   PICO_CODE.psm
 * DELAY_10US         0BC   PICO_CODE.psm
   DELAY_107US        0C0   PICO_CODE.psm
 * DELAY_1MS          0C4   PICO_CODE.psm
   DELAY_20MS         0C8   PICO_CODE.psm
 * DELAY_1S           0CC   PICO_CODE.psm
   SOFTWARE_DELAY     0D0   PICO_CODE.psm

      * Line label has not been referenced in any instructions.
        Hint - This may indicate unused code that could be
               removed to reduce the size of this program.



Instruction usage statistics

 Instruction    Instances

 LOAD             27
 STAR              -

 AND               -
 OR                -
 XOR               -

 ADD               3
 ADDCY             3
 SUB               2
 SUBCY             2

 TEST              2
 TESTCY            -
 COMPARE          16
 COMPARECY         -

 SL0               -
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           -

 INPUT            12
 OUTPUT           28
 OUTPUTK           -

 STORE            19
 FETCH            19

 DISABLE           -
 ENABLE            -
 RETURNI           -

 JUMP             27
 JUMP@             -
 CALL             38
 CALL@             -
 RETURN           15
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
